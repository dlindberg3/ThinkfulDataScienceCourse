remove.packages("foo")
remove.packages("fibon")
shapiro.test(rnorm(100))
shapiro.test(runif(100))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 50, sd = 3))
qqplot(runif(100))
qqnorm(runif(100))
qqnorm(rnorm(100))
qqnorm(rexp(100))
qqnorm(rpois(100))
qqnorm(rpois(100, 1))
shapiro.test(qqnorm(rpois(100, 1)))
shapiro.test(rpois(100,1))
betahat <- matrix(rep(0,(2*nsim)),ncol=2)
set.seed(13579)
beta <- matrix(c(50,10),ncol=1)
X0 <- matrix(rep(1,22),ncol=1)
X1 <- matrix(rep(seq(0,10,1),2),ncol=1)
X <- cbind(X0,X1)
n <- nrow(X)
nsim <- 100000
betahat <- matrix(rep(0,(2*nsim)),ncol=2)
s2 <- matrix(rep(0,nsim),ncol=1)
s2beta <- matrix(rep(0,(4*nsim)),ncol=4)
beta1lo <- matrix(rep(0,nsim),ncol=1)
beta1hi <- matrix(rep(0,nsim),ncol=1)
covrate <- 0
for (i in 1:nsim) {
eps <- rnorm(22)
Y <- EY + eps*(X[,2]+0.5)
bsim <- XXIX %*% Y
s2sim <- (t(Y-X%*%bsim) %*% (Y-X%*%bsim))/20
s2bsim <- s2sim[1,1]* XXI
beta1lo[i] <- bsim[2,1] - tn_2*sqrt(s2bsim[2,2])
beta1hi[i] <- bsim[2,1] + tn_2*sqrt(s2bsim[2,2])
if ((beta1lo[i] <= beta[2,1]) & (beta1hi[i] >= beta[2,1])) covrate=covrate+1
betahat[i,] <- t(bsim)
s2[i] <- s2sim
for (i1 in 1:2) {
for (i2 in 1:2) {
s2beta[i,(((i1-1)*2)+i2)] <- s2bsim[i1,i2]
}}
}
EY <- X %*% beta
XX <- t(X)%*%X
XXI <- solve(t(X)%*%X)
XXIX <- solve(t(X)%*%X) %*% t(X)
tn_2 <- qt(.975,n-2)
for (i in 1:nsim) {
eps <- rnorm(22)
Y <- EY + eps*(X[,2]+0.5)
bsim <- XXIX %*% Y
s2sim <- (t(Y-X%*%bsim) %*% (Y-X%*%bsim))/20
s2bsim <- s2sim[1,1]* XXI
beta1lo[i] <- bsim[2,1] - tn_2*sqrt(s2bsim[2,2])
beta1hi[i] <- bsim[2,1] + tn_2*sqrt(s2bsim[2,2])
if ((beta1lo[i] <= beta[2,1]) & (beta1hi[i] >= beta[2,1])) covrate=covrate+1
betahat[i,] <- t(bsim)
s2[i] <- s2sim
for (i1 in 1:2) {
for (i2 in 1:2) {
s2beta[i,(((i1-1)*2)+i2)] <- s2bsim[i1,i2]
}}
}
mean(betahat[,2])
sd(betahat[,2])
mean(s2)
var(s2)
mean(s2beta[,4])
mean(beta1hi-beta1lo)
covrate <- covrate/nsim
covrate
set.seed(13579)
betahat <- matrix(rep(0,(2*nsim)),ncol=2)
s2 <- matrix(rep(0,nsim),ncol=1)
s2beta <- matrix(rep(0,(4*nsim)),ncol=4)
beta1lo <- matrix(rep(0,nsim),ncol=1)
beta1hi <- matrix(rep(0,nsim),ncol=1)
covrate <- 0
for (i in 1:nsim) {
eps <- rnorm(22)
Y <- EY + eps*(X[,2]+0.5)
bsim <- XXIX %*% Y
s2sim <- (t(Y-X%*%bsim) %*% (Y-X%*%bsim))/20
s2bsim <- s2sim[1,1]* XXI
beta1lo[i] <- bsim[2,1] - tn_2*sqrt(s2bsim[2,2])
beta1hi[i] <- bsim[2,1] + tn_2*sqrt(s2bsim[2,2])
if ((beta1lo[i] <= beta[2,1]) & (beta1hi[i] >= beta[2,1])) covrate=covrate+1
betahat[i,] <- t(bsim)
s2[i] <- s2sim
for (i1 in 1:2) {
for (i2 in 1:2) {
s2beta[i,(((i1-1)*2)+i2)] <- s2bsim[i1,i2]
}}
}
mean(betahat[,2])
sd(betahat[,2])
mean(s2)
var(s2)
mean(s2beta[,4])
mean(beta1hi-beta1lo)
covrate <- covrate/nsim
covrate
brk <- seq(-10.0,30.0,0.01)
h1 <- hist(betahat[,2], plot=F)
range(0, h1$density, dnorm(10,10,0.4763))
ylim <- range(0, h1$density, dnorm(10,10,.4763))
hist(betahat[,2], breaks=brk, freq=F, xlim=c(8.0,12.0), ylim=c(0,1.0))
curve(dnorm(x,10,0.4763), add=T)
betahat <- matrix(rep(0,(2*nsim)),ncol=2)
s2 <- matrix(rep(0,nsim),ncol=1)
s2beta <- matrix(rep(0,(4*nsim)),ncol=4)
beta1lo <- matrix(rep(0,nsim),ncol=1)
beta1hi <- matrix(rep(0,nsim),ncol=1)
covrate <- 0
sigma <- 3
rho <- 0.5
for (i in 1:nsim) {
eps <- rep(0,n)
v  <- rnorm(n-1,mean=0,sd=sigma)
eps[1] <- rnorm(1,mean=0,sd=(sigma/sqrt(1-rho^2)))
for (i1 in 2:n) {
eps[i1] <- rho*eps[i1-1] + v[i1-1]
}
Y <- EY + eps
bsim <- XXIX %*% Y
s2sim <- (t(Y-X%*%bsim) %*% (Y-X%*%bsim))/20
s2bsim <- s2sim[1,1]* XXI
beta1lo[i] <- bsim[2,1] - tn_2*sqrt(s2bsim[2,2])
beta1hi[i] <- bsim[2,1] + tn_2*sqrt(s2bsim[2,2])
if ((beta1lo[i] <= beta[2,1]) & (beta1hi[i] >= beta[2,1])) covrate=covrate+1
betahat[i,] <- t(bsim)
s2[i] <- s2sim
for (i1 in 1:2) {
for (i2 in 1:2) {
s2beta[i,(((i1-1)*2)+i2)] <- s2bsim[i1,i2]
}}
}
mean(betahat[,2])
sd(betahat[,2])
mean(s2)
var(s2)
mean(s2beta[,4])
mean(beta1hi-beta1lo)
covrate <- covrate/nsim
covrate
brk <- seq(-10.0,30.0,0.01)
h1 <- hist(betahat[,2], plot=F)
range(0, h1$density, dnorm(10,10,.035032))
ylim <- range(0, h1$density, dnorm(10,10,.2629))
hist(betahat[,2], breaks=brk, freq=F, xlim=c(9.0,11.0), ylim=c(0,1.5))
curve(dnorm(x,10,0.2629), add=T)
?vif
??vif
library(usdm)
install.packages('usdm')
?lu
??lu
??ldu
?svd
mm <- matrix(c(0,0,1,0,1,2,-2,-2,1), byrow = TRUE, nrow = 3, ncol = 3)
mm
svd(mm)
lu(mm)
ldu(mm)
chol(mm)
det(mm)
eig(mm)
eigen(mm)
X <- matrix(c(1,2,3,4), nrow = 2, byrow = TRUE)
diag(X)
diag(4)
tr(X)
trace(X)
t(X)
lower.tri(X)
Y <- matrix(1:6, nrow = 2, byrow = T)
Y %*% X
X %*% Y
crossprod(Y,X)
crossprod(X,Y)
t(Y) %*% X
t(X) %*% Y
crossprod(t(Y), X)
crossprod(X, t(Y))
crossprod(Y, t(X))
crossprod(t(X), Y)
kappa(X)
X <- matrix(c(1,2,3,4), nrow = 2, byrow = TRUE)
svd(X)
svd(Y)
Y <- matrix(1:6, nrow = 2, byrow = T)
svd(Y)
Z <- matrix(c(1,0,0,0,1,0), nrow = 2, byrow = TRUE)
svd(Z)
Z <- matrix(c(1,0,1,0,1,0), nrow = 2, byrow = TRUE)
svd(Z)
Z <- matrix(c(1,0,1,0,1,1), nrow = 2, byrow = TRUE)
svd(Z)
Z <- matrix(c(1,0,1,0,1,-1), nrow = 2, byrow = TRUE)
svd(Z)
Z <- matrix(c(1,1,1,0,1,-1), nrow = 2, byrow = TRUE)
svd(Z)
Z
X = matrix(c(rep(1,5)), nrow = 5)
X <- matrix(c(rep(1,5)), nrow = 5)
X
Y <- matrix(c(1:5), nrow = 5)
XX.matrix <- t(X) %*% X
XX.matrix <- t(X) %*% X [1]
XX.matrix <- (t(X) %*% X)[1]
XY.matrix <- (t(X) %*% Y)[1]
beta.hat <- XY.matrix / XX.matrix
RSS
RSS(1)
?RSS
?curve
?plot
?abline
?boxcox
library(MASS)
?boxcox
?qqplot
?predict
?"data.frame"
V <- diag(5)
for(i in 1:4) {
V[i+1,i] <- -1
}
V
eig(V)
eigen(V)
solve(V)
t(X) %*% solve(V) %*% X
X <- matrix(c(rep(1,5)), nrow = 5)
t(X) %*% solve(V) %*% X
V1 <- diag((1:5)^(-1))
V1
t(X) %*% solve(V1) %*% X
sqrt(V)
V^(1/2)
library(expm)
sqrtm(V)
X <- matrix(c(rep(1,5)), nrow = 5)
Y <- matrix(c(1:5), nrow = 5)
XX.matrix <- (t(X) %*% X)[1]
XY.matrix <- (t(X) %*% Y)[1]
beta.hat <- XY.matrix / XX.matrix
mean(Y)
rnorm.Y <- rnorm(n=5)
Y <- rnorm.Y
XX.matrix <- (t(X) %*% X)[1]
XY.matrix <- (t(X) %*% Y)[1]
beta.hat <- XY.matrix / XX.matrix
mean(rnorm.Y)
beta.hat
V1 <- diag((1:5)^(-1))
V1
t(X) %*% solve(V1) %*% X
t(X) %*% V1 %*% X
(t(X) %*% V1 %*% X)^(-1)
V1 <- diag((1:5))
(t(X) %*% solve(V1) %*% X)^(-1) *
(t(X) %*% solve(V1) %*% X)^(-1) * t(X) %*% solve(V1) %*% Y
Y <- matrix(1:5, nrow = 5)
beta.hat.GLM <- (t(X) %*% solve(V1) %*% X)^(-1) * t(X) %*% solve(V1) %*% Y
beta.hat.GLM
XY.matrix <- (t(X) %*% Y)[1]
beta.hat <- XY.matrix / XX.matrix
beta.hat.GLM <- ((t(X) %*% solve(V1) %*% X)^(-1) * t(X) %*% solve(V1) %*% Y)[1]
beta.hat.GLM^-1
(45+2/3)/100
100/(45+2/3)
100/(45+2/3)-beta.hat.GLM
1+1/2+1/3+1/4+1/5
228*3
685/300
685/5
137/60
beta.hat.GLM
?dot
??dot
60/137 * sum((1:5)^(-1) * Y)
(beta.hat.GLM <- ((t(X) %*% solve(V1) %*% X)^(-1) * t(X) %*% solve(V1) %*% Y)[1])
60/137
library(devtools)
install_github(repo = "Surus", username = "Netflix", subdir = "resources/R/RAD")
rbinom(1, 100, 0.5)
rbinom(100, 1, 0.5)
setwd("~/Thinkful Data Science/Projects/Unit 02/MultivariateLoan")
loan.data <- read.csv('LoanStats3a.csv')
loan.data <- read.csv('LoanStats3a.csv')
head(lona.data)
head(loan.data)
X.data <- loan.data[,'annual_inc']
head(X.data)
Y.data <- loan.data['int_rate']
Y.data <- loan.data[,'int_rate']
head(Y.data)
X.data <- loan.data[,c('annual_inc','home_ownership')]
Y.data <- as.vector(loan.data[,'int_rate'])
head(X.data)
aggregate(X.data[,2])
aggregate(X.data[,2], FUN = length)
aggregate(X.data[,2], by = X.data[,2], FUN = length)
aggregate(X.data[,2], by = as.list(X.data[,2]), FUN = length)
aggregate(X.data[,2], by = list(X.data[,2]), FUN = length)
summary(lm(Y.data ~ X.data))
summary(lm(Y.data ~ factor(X.data)))
lm(Y.data ~ factor(X.data))
lm(int_rate ~ annual_inc, data = loan.data)
head(Y.data)
Y.data <- gsub(,"%","",loan.data[,'int_rate'])
Y.data <- gsub(,"\%","",loan.data[,'int_rate'])
Y.data <- gsub(,""\%","",loan.data[,'int_rate'])
Y.data <- gsub(,""%","",loan.data[,'int_rate'])
Y.data <- loan.data[,'int_rate']
Y.data <- Y.data.Replace("%","")
Y.data <- as.numeric(loan.data[,'int_rate'])
lm(Y.data ~ X.data)
attach(loan.data)
lm(as.numeric(int_rate) ~ annual_inc)
Y.data <- as.numeric(loan.data[,'int_rate']) * 100
lm(as.numeric(int_rate) ~ annual_inc)
lm(as.numeric(int_rate)*100 ~ annual_inc)
loan.data.sub1 <- loan.data[,c('int_rate','annual_inc')]
loan.data.sub1 <- loan.data.sub1[complete.cases(loan.data.sub1),]
X.data <- loan.data.sub1[,c('annual_inc','home_ownership')]
X.data <- loan.data.sub1[,c('annual_inc')]
Y.data <- as.numeric(loan.data.sub1[,'int_rate']) * 100
lm(Y.data ~ X.data)
summary(lm(Y.data ~ X.data))
head(Y.data)
Y.data <- as.numeric(loan.data.sub1[,'int_rate'])
head(Y.data)
Y.data <- loan.data.sub1[,'int_rate']
head(Y.data)
Y.data <- sub("%","",loan.data.sub1[,'int_rate'])
lm(Y.data ~ X.data)
summary(lm(Y.data ~ X.data))
X.data <- loan.data.sub1[,c('annual_inc','home_ownership')]
loan.data.sub1 <- loan.data[,c('int_rate','annual_inc','home_ownership')]
loan.data.sub1 <- loan.data.sub1[complete.cases(loan.data.sub1),]
X.data <- loan.data.sub1[,c('annual_inc','home_ownership')]
Y.data <- sub("%","",loan.data.sub1[,'int_rate'])
summary(lm(Y.data ~ X.data[,c('annual_inc')]))
summary(lm(Y.data ~ X.data[,c('annual_inc')] + X.data[,c('home_ownership')]))
summary(lm(Y.data ~ X.data[,c('annual_inc')] + factor(X.data[,c('home_ownership')])))
